# Use multi-stage build to reduce final image size
# Builder is a temporary image used for building the python wheels
# Wheels are then copied to final production image and Builder is deleted

### Builder ###

# pull official base image
FROM python:3.11.4-slim-buster as builder

# set work directory inside container
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# Copy app
COPY . /usr/src/app/

# install python dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

### Final ###

# pull official base image
FROM python:3.11.4-slim-buster

# create home directory for new non-root 'app' user
RUN mkdir -p /home/app

# create 'app' user
RUN addgroup --system app && adduser --system --group app

# create workspace
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh script
COPY ./entrypoint.prod.sh .
# perform an in-place substitution, removing any trailing carriage returns '\r'
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# set all files to belong to 'app' user
RUN chown -R app:app $APP_HOME

# change to 'app' user
USER app

# run entrypoint.prod.sh
ENTRYPOINT [ "/home/app/web/entrypoint.prod.sh" ]